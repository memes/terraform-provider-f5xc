---
page_title: "Provider: F5XC"
description: |-
  {{ .Description | plainmarkdown | trimspace | prefixlines "  " }}
---
# {{ .ProviderShortName | upper }} Provider

{{ .Description | trimspace }}

> DISCLAIMER: This provider is not an official F5, Inc. product and is not endorsed by F5 or covered by any F5 support
> policy.

## Authentication

The {{ .ProviderShortName }} provider requires authentication to the F5 Distributed Cloud API to retrieve policies and
documents, and the URL assigned to your tenant. These values can be explicitly declared in the `provider` block or they
can be inferred from environment variables.

Although the `url` attribute is marked as *optional*, the *base API URL that is assigned to your tenant must be provided
either as a block attribute or through `VOLT_API_URL` environment variable*.

### Using PKCS#12 bundle

After generating and downloading a [p12] file from F5 Distributed Cloud console the {{ .ProviderShortName }} provider can
be configured using the `api_p12_file` attribute or `VOLT_API_P12_FILE` environment variable. Alternatively, a base64
encoded copy of the [p12] file contents can be set in the environment variable `VES_P12_CONTENT`.

NOTE: To avoid disclosing the passphrase accidentally the provider requires that `VES_P12_PASSWORD` environment variable
contains the passphrase to unlock the PKCS#12 certificate.

{{ tffile "examples/provider/provider_pkcs12.tf" }}

### Using a x509 certificate and key pair

You can choose to unlock and split the [p12] file into an x509 certificate and key pair, and use those to authenticate
to F5 Distributed Cloud. Ensure the certificate and key are PEM encoded before trying to authenticate with them.

{{ tffile "examples/provider/provider_x509.tf" }}

The environment variables `VOLT_API_CERT` and `VOLT_API_KEY` can be used to set the x509 certificate and key attributes,
respectively.

### Using an API token

The final option uses an API [token] generated from the F5 Distributed Cloud console.

NOTE: Using and declaring an API token explicitly in the provider block risks exposing access to the API to anyone able
to read the Terraform file containing the declaration. Token authentication should only be used with a short-lived token,
and preferably through the use of `VOLTERRA_TOKEN` environment variable.

{{ tffile "examples/provider/provider_token.tf" }}

{{ .SchemaMarkdown | trimspace }}

[p12]: https://docs.cloud.f5.com/docs/how-to/user-mgmt/credentials#generate-api-certificate
[token]: https://docs.cloud.f5.com/docs/how-to/user-mgmt/credentials#generate-api-tokens
